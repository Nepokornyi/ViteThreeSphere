import{S as e,P as t,W as o,M as a,a as i,b as n,T as r,A as s,B as v,G as d,c as l,d as c,e as m,F as x,g as w}from"./vendor.04881e56.js";const g=document.querySelector("#canvasContainer"),f=new e,h=new t(75,g.offsetWidth/g.offsetHeight,.1,1e3);h.position.z=15;const u=new o({antialias:!0,canvas:document.querySelector("canvas")});console.log(g),u.setSize(g.offsetWidth,g.offsetHeight),u.setPixelRatio(window.devicePixelRatio);const y=new a(new i(5,30,30),new n({vertexShader:"varying vec2 vertexUV;varying vec3 vertexNormal;void main(){vertexUV=uv;vertexNormal=normalize(normalMatrix*normal);gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}",fragmentShader:"uniform sampler2D globeTexture;varying vec2 vertexUV;varying vec3 vertexNormal;void main(){float intensity=1.05-dot(vertexNormal,vec3(0.0,0.0,1.0));vec3 atmosphere=vec3(0.2,0.55,1.0)*pow(intensity,1.5);gl_FragColor=vec4(atmosphere+texture2D(globeTexture,vertexUV).xyz,1.0);}",uniforms:{globeTexture:{value:(new r).load("./textures/uvEarthMap.jpg")}}})),p=new a(new i(5,30,30),new n({vertexShader:"varying vec3 vertexNormal;void main(){vertexNormal=normalize(normalMatrix*normal);gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}",fragmentShader:"varying vec3 vertexNormal;void main(){float intensity=pow(0.75-dot(vertexNormal,vec3(0.0,0.0,1.0)),2.0);gl_FragColor=vec4(0.2,0.55,1.0,1.0)*intensity;}",blending:s,side:v}));p.scale.set(1.1,1.1,1.1),f.add(p);const M=new d;M.add(y),f.add(M);const S=new l,N=new m(S,new c({color:16777215})),P=[];for(let b=0;b<1e3;b++){const e=2e3*(Math.random()-.5),t=2e3*(Math.random()-.5),o=2e3*-Math.random();P.push(e,t,o)}S.setAttribute("position",new x(P,3)),f.add(N);const z={x:0,y:0};!function e(){requestAnimationFrame(e),u.render(f,h),y.rotation.y+=.002,w.to(M.rotation,{x:.2*-z.y,y:.4*z.x,duration:2})}(),window.addEventListener("resize",(()=>{h.aspect=g.offsetWidth/g.offsetHeight,h.updateProjectionMatrix(),u.setSize(g.offsetWidth,g.offsetHeight),u.setPixelRatio(window.devicePixelRatio)})),window.addEventListener("mousemove",(e=>{z.x=e.clientX/innerWidth*2-1,z.y=-e.clientY/innerHeight*2+1}));
